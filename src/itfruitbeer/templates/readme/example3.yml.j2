{% extends "readme/example2.yml.j2" %}

{% block example_description %}
Same as previous but add run once script using runcmd: in yaml.

When cloud-init sees runcmd:, then it generates `/var/lib/cloud/instance/scripts/runcmd` and runs it.

In this example I intentionally fail script1 in order to see if the next script will run or whether all subsequent scripts fail.
{% endblock %}


{% block example_footer %}
We can see failure on script1 in cloud init logs.

Search for "Exit code" in `/var/log/cloud-init.log`.  There it shows the runcmd failed since script1 exited with nonzero exit code.

Check last 10 lines or so from here and you'll notice the `touch /tmp/$(date +%s).txt` from script2 never ran since script1 failed.
{% endblock %}

{% block footer_commands %}
lxc exec ubc -- less -RSi /var/log/cloud-init.log | grep 'Exit code:'
lxc exec ubc -- less -RSi /var/log/cloud-init-output.log
{% endblock %}

{% block cloud %}
runcmd:
- set -x
- set -e # this prevents script2 from running since script1 fails
- set -u
- bash -xe /root/script1.sh
- bash -xe /root/script2.sh

write_files:
- content: |
    #!/usr/bin/env bash

    set -x
    set -e
    set -u

    exit 1 # intentionally fail

  path: /root/script1.sh
  append: true
  permissions: "0755"

- content: |
    #!/usr/bin/env bash

    set -x
    set -e
    set -u

    touch /tmp/$(date +%s).txt

  path: /root/script2.sh
  append: true
  permissions: "0755"
{% endblock %}
